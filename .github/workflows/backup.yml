name: CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches: [ "master" ]

jobs:
    
  tests:
    runs-on: ubuntu-latest
    name: 'Test artifact'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
      
    - name: Run Tests
      run: mvn -B test
      
    - name: Build with Maven
      run: mvn package
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        path: target/*.jar
    
  build:
    needs: tests
    name: 'Build Docker-image'
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        path: target

    - name: Move to target folder
      run: mv target/artifact/pdanetwork.jar target
      
    - name: Build and push docker image
      uses: docker/build-push-action@v3
      with:
         context: .
         platforms: linux/arm64
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/pdanetwork:latest
       
  deploy:
    needs: build
    name: 'Deploy image to server'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml"
          target: "app"
          
      - name: "Start container"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}
            sudo docker compose -f ~/app/docker-compose.yml pull back
            sudo docker compose -f ~/app/docker-compose.yml up -d
