name: Deploy prod

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Tag of docker image to deploy (use 'master' to build new)
        default: master

jobs:
  test:
    name: Test
    uses: ./.github/workflows/test.yml

  backupdb:
    name: Backup DB
    uses: ./.github/workflows/backup.yml

  build:
    needs: test
    runs-on: self-hosted
    name: 'Build and upload artifact'
    if: github.event.inputs.tag == 'master'
    steps:
      - uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '20'
          cache: 'gradle'

      - name: Build with gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.4

      - name: Gradle build
        run: ./gradlew build --no-daemon -x test

      - name: Login to Artux registry to push image
        uses: docker/login-action@v2
        with:
          registry: registry.artux.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          logout: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            registry.artux.net/pdanetwork
          tags: |
            type=raw,value=${{github.run_number}}
            type=ref,event=branch

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    needs: 
     - build
     - backupdb
     
    name: 'Deploy on server'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'docker'

      - name: Run compose services
        env:
          DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}
          DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
          DATASOURCE_DB_NAME: ${{secrets.DATASOURCE_DB_NAME}}
          SERVER_HOST: app.artux.net
          IMAGE_TAG: ${{ github.event.inputs.tag }}
          WEB_IMAGE_TAG: main
          STACK_NAME: pdanetwork_master
        run: |          
          docker login registry.artux.net -u ${{secrets.REGISTRY_USERNAME}} -p ${{secrets.REGISTRY_PASSWORD}}   
          docker compose -f "./docker/compose.master.yml" pull
          docker compose -f "./docker/compose.master.yml" down --remove-orphans
          docker system prune -a -f
          docker compose -f "./docker/compose.master.yml" --profile prod up -d
