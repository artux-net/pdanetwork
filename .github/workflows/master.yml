name: CI/CD

on:
  push:
    branches: [ "master"]

jobs:
  test:
    uses: ./.github/workflows/test.yml

  build:
    needs: test
    runs-on: self-hosted
    name: 'Build and upload artifact'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven

      - name: Build with Maven
        run: mvn clean package

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          path: target/*.jar

      - name: Login to Artux registry
        uses: docker/login-action@v2
        with:
          registry: registry.artux.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          logout: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.artux.net/pdanetwork
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    needs: build
    name: 'Deploy Compose on server'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Run services
        env:
          DATASOURCE_USERNAME: ${{DATASOURCE_USERNAME}}
          DATASOURCE_PASSWORD: ${{DATASOURCE_PASSWORD}}
          DATASOURCE_DB_NAME: pdanetwork
          SERVER_HOST: app.artux.net

        run: |
          docker login registry.artux.net -u ${{secrets.REGISTRY_USERNAME}} -p ${{secrets.REGISTRY_PASSWORD}}
          
          docker compose -f "./docker/compose.master.yml" pull
          docker compose -f "./docker/compose.master.yml" down
          docker compose -f "./docker/compose.master.yml" up -d 
          docker system prune -a -f
        

