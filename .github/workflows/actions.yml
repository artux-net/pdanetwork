name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
    
  build:
    runs-on: ubuntu-latest
    name: 'Build and test artifact'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 16
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'zulu'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean package
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        path: target/*.jar
    
  push:
    needs: build
    name: 'Build image'
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        path: target

    - name: Move to target folder
      run: mv target/artifact/pdanetwork.jar target
      
    - name: Build and push docker image
      uses: docker/build-push-action@v3
      with:
         context: .
         platforms: linux/arm64
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/pdanetwork:latest
       
  deploy:
    needs: push
    name: 'Deploy to server'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          source: "docker-compose.yml"
          target: "app"
          
      - name: "Start container"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            sudo docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}
            sudo docker compose -f ~/app/docker-compose.yml pull back
            sudo docker compose -f ~/app/docker-compose.yml up -d
