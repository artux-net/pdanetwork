name: ⚙️ Deploy Docker Swarm stack

on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: Docker image to deploy (if empty, 'master' used)
        default: master
        required: true
      profile:
        type: string
        description: Deployment profile (dev/prod)
        default: dev
        required: true

jobs:
  deploy:
    name: "Deploy stack"
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'docker'

      - name: Login to Artux registry
        uses: docker/login-action@v3
        with:
          registry: registry.artux.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          logout: false

      - name: Setup profile and environment
        env:
          DEV_SERVER_HOST: dev.artux.net
          DEV_STACK_NAME: pdanet-dev
          DEV_WEB_PANEL_IMAGE_TAG: dev

          PROD_SERVER_HOST: app.artux.net
          PROD_STACK_NAME: pdanet-prod
          PROD_WEB_PANEL_IMAGE_TAG: main
        run: |
          if [ "${{ inputs.profile }}" == "prod" ]; then
            echo "STACK_NAME=$PROD_STACK_NAME" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=$PROD_WEB_PANEL_IMAGE_TAG" >> $GITHUB_ENV
            echo "SERVER_HOST=$PROD_SERVER_HOST" >> $GITHUB_ENV
          else
            echo "STACK_NAME=$DEV_STACK_NAME" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=$DEV_WEB_PANEL_IMAGE_TAG" >> $GITHUB_ENV
            echo "SERVER_HOST=$DEV_SERVER_HOST" >> $GITHUB_ENV
          fi

      - name: Generate .env file for stack
        run: |
          cat <<EOF > ./docker/.env
          IMAGE_TAG=${{ inputs.tag }}
          WEB_IMAGE_TAG=${{ env.WEB_IMAGE_TAG }}
          SERVER_HOST=${{ env.SERVER_HOST }}
          DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }}
          DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }}
          DATASOURCE_DB_NAME=${{ secrets.DATASOURCE_DB_NAME }}
          MAIL_HOST=mail.artux.net
          MAIL_USERNAME=noreply@artux.net
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          EOF

      - name: Deploy stack to Docker Swarm
        run: |
          cd docker
          if [ "${{ inputs.profile }}" == "prod" ]; then
            docker stack deploy $STACK_NAME -c <(docker compose -f compose.prod.yml config)
          else
            docker stack deploy $STACK_NAME -c <(docker compose -f compose.dev.yml config)
          fi

      - name: Cleanup unused resources
        run: docker system prune -af
