name: ⚙️ Deploy Docker Swarm stack

on:
  workflow_call:

jobs:
  deploy:
    name: "Deploy stack (${{ github.ref_name }} -> auto-detected profile)"
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'docker'

      - name: Login to Artux registry
        uses: docker/login-action@v3
        with:
          registry: registry.artux.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          logout: false

      - name: Determine deployment context
        id: context
        run: |
          # Determine if we're deploying from a tag or branch
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # This is a tag - deploy to production
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "profile=prod" >> $GITHUB_OUTPUT
            echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "deploying_from=tag" >> $GITHUB_OUTPUT
            echo "Detected tag deployment: $TAG_NAME -> prod"
          else
            # This is a branch - deploy to dev
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            echo "profile=dev" >> $GITHUB_OUTPUT
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "deploying_from=branch" >> $GITHUB_OUTPUT
            echo "Detected branch deployment: $BRANCH_NAME -> dev"
          fi

      - name: Setup profile and environment
        run: |
          if [ "${{ steps.context.outputs.profile }}" == "prod" ]; then
            echo "STACK_NAME=pdanet-prod" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=main" >> $GITHUB_ENV
          else
            echo "STACK_NAME=pdanet-dev" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=dev" >> $GITHUB_ENV
          fi
          # Generate .env file for stack
          cat <<EOF > ./docker/.env
          IMAGE_TAG=${{ steps.context.outputs.tag }}
          WEB_IMAGE_TAG=${{ env.WEB_IMAGE_TAG }}
          EOF

      - name: Deploy stack to Docker Swarm
        run: |
          cd docker
          if [ "${{ steps.context.outputs.profile }}" == "prod" ]; then
            docker stack deploy $STACK_NAME -c <(docker-compose -f compose.prod.yml config)
          else
            docker stack deploy $STACK_NAME -c <(docker-compose -f compose.dev.yml config)
          fi

      - name: Cleanup unused resources
        run: docker system prune -af
