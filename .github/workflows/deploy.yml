name: Deploy specific version

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: Docker image to deploy (if empty, 'master' used)
        default: master
        required: true
      profile:
        type: choice
        description: Profile to deploy
        default: dev
        required: true
        options:
          - prod
          - dev

  workflow_call:
    inputs:
      tag:
        type: string
        description: Docker image to deploy (if empty, 'master' used)
        default: master
        required: true
      profile:
        type: string
        description: Profile to deploy (only dev/prod)
        default: dev
        required: true

jobs:
  deploy:
    name: 'Deploy сompose'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: 'docker'

      - name: Login to Artux registry to pull images
        uses: docker/login-action@v3
        with:
          registry: registry.artux.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          logout: false

      - name: Setup profile env
        env:
          DEV_SERVER_HOST: dev.artux.net
          DEV_STACK_NAME: pdanetwork
          DEV_WEB_PANEL_IMAGE_TAG: dev

          PROD_SERVER_HOST: app.artux.net
          PROD_STACK_NAME: pdanetwork_master
          PROD_WEB_PANEL_IMAGE_TAG: main
        run: |
          if [ ${{github.event.inputs.profile }} == 'prod' ];  then
            echo "STACK_NAME=$PROD_STACK_NAME" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=$PROD_WEB_PANEL_IMAGE_TAG" >> $GITHUB_ENV
            echo "SERVER_HOST=$PROD_SERVER_HOST" >> $GITHUB_ENV
          else
            echo "STACK_NAME=$DEV_STACK_NAME" >> $GITHUB_ENV
            echo "WEB_IMAGE_TAG=$DEV_WEB_PANEL_IMAGE_TAG" >> $GITHUB_ENV
            echo "SERVER_HOST=$DEV_SERVER_HOST" >> $GITHUB_ENV
          fi

      - name: Run compose services
        env:
          DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}
          DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
          DATASOURCE_DB_NAME: ${{secrets.DATASOURCE_DB_NAME}}

          IMAGE_TAG: ${{ github.event.inputs.tag }}

          MAIL_HOST: mail.artux.net
          MAIL_USERNAME: noreply@artux.net
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
        run: |
          cd ./docker
          
          docker compose -f "compose.master.yml" config
          docker compose -f "compose.master.yml" pull
          docker compose -f "compose.master.yml" \
                         --profile ${{ github.event.inputs.profile }} up -d

          docker system prune -a -f